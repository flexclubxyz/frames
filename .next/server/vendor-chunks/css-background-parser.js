/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/css-background-parser";
exports.ids = ["vendor-chunks/css-background-parser"];
exports.modules = {

/***/ "(rsc)/./node_modules/css-background-parser/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-background-parser/index.js ***!
  \*****************************************************/
/***/ (function(module) {

eval("/*!\n * https://github.com/gilmoreorless/css-background-parser\n * Copyright Â© 2015 Gilmore Davidson under the MIT license: http://gilmoreorless.mit-license.org/\n */\n(function (exports) {\n\n    function BackgroundList(backgrounds) {\n        if (!(this instanceof BackgroundList)) {\n            return new BackgroundList();\n        }\n        this.backgrounds = backgrounds || [];\n    }\n\n    BackgroundList.prototype.toString = function () {\n        return this.backgrounds.join(', ');\n    };\n\n\n    function Background(props) {\n        if (!(this instanceof Background)) {\n            return new Background(props);\n        }\n        props = props || {};\n        var bg = this;\n\n        function defprop(name, defaultValue) {\n            bg[name] = (name in props) ? props[name] : defaultValue;\n        }\n\n        // http://www.w3.org/TR/css3-background/#backgrounds\n        defprop('color', '');\n        defprop('image', 'none');\n        defprop('attachment', 'scroll');\n        defprop('clip', 'border-box');\n        defprop('origin', 'padding-box');\n        defprop('position', '0% 0%');\n        defprop('repeat', 'repeat');\n        defprop('size', 'auto');\n    }\n\n    Background.prototype.toString = function () {\n        var list = [\n            this.image,\n            this.repeat,\n            this.attachment,\n            this.position + ' / ' + this.size,\n            this.origin,\n            this.clip\n        ];\n        if (this.color) {\n            list.unshift(this.color);\n        }\n        return list.join(' ');\n    };\n\n    exports.BackgroundList = BackgroundList;\n    exports.Background = Background;\n\n\n    function parseImages(cssText) {\n        var images = [];\n        var tokens = /[,\\(\\)]/;\n        var parens = 0;\n        var buffer = '';\n\n        if (cssText == null) {\n            return images;\n        }\n\n        while (cssText.length) {\n            var match = tokens.exec(cssText);\n            if (!match) {\n                break;\n            }\n            var char = match[0];\n            var ignoreChar = false;\n            switch (char) {\n                case ',':\n                    if (!parens) {\n                        images.push(buffer.trim());\n                        buffer = '';\n                        ignoreChar = true;\n                    }\n                    break;\n                case '(':\n                    parens++;\n                    break;\n                case ')':\n                    parens--;\n                    break;\n            }\n\n            var index = match.index + 1;\n            buffer += cssText.slice(0, ignoreChar ? index - 1 : index);\n            cssText = cssText.slice(index);\n        }\n\n        if (buffer.length || cssText.length) {\n            images.push((buffer + cssText).trim());\n        }\n\n        return images;\n    }\n\n    // Helper for .map()\n    function trim(str) {\n        return str.trim();\n    }\n\n    function parseSimpleList(cssText) {\n        return (cssText || '').split(',').map(trim);\n    }\n\n    exports.parseElementStyle = function (styleObject) {\n        var list = new BackgroundList();\n        if (styleObject == null) {\n            return list;\n        }\n\n        var bgImage = parseImages(styleObject.backgroundImage);\n        var bgColor = styleObject.backgroundColor;\n        var bgAttachment = parseSimpleList(styleObject.backgroundAttachment);\n        var bgClip       = parseSimpleList(styleObject.backgroundClip);\n        var bgOrigin     = parseSimpleList(styleObject.backgroundOrigin);\n        var bgPosition   = parseSimpleList(styleObject.backgroundPosition);\n        var bgRepeat     = parseSimpleList(styleObject.backgroundRepeat);\n        var bgSize       = parseSimpleList(styleObject.backgroundSize);\n        var background;\n\n        for (var i = 0, ii = bgImage.length; i < ii; i++) {\n            background = new Background({\n                image:      bgImage[i],\n                attachment: bgAttachment[i % bgAttachment.length],\n                clip:       bgClip[i % bgClip.length],\n                origin:     bgOrigin[i % bgOrigin.length],\n                position:   bgPosition[i % bgPosition.length],\n                repeat:     bgRepeat[i % bgRepeat.length],\n                size:       bgSize[i % bgSize.length]\n            });\n            if (i === ii - 1) {\n                background.color = bgColor;\n            }\n            list.backgrounds.push(background);\n        }\n\n        return list;\n    };\n\n    // exports.parseCssString = function (cssString) {\n    //     return new Background();\n    // };\n\n    // exports.parseBackgroundValue = function (cssString) {\n    //     return new Background();\n    // };\n\n})((function (root) {\n    // CommonJS\n    if ( true && module.exports !== undefined) return module.exports;\n    // Global `cssBgParser`\n    return (root.cssBgParser = {});\n})(this));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY3NzLWJhY2tncm91bmQtcGFyc2VyL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSw2Q0FBNkMsUUFBUTtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLENBQUM7QUFDRDtBQUNBLFFBQVEsS0FBNkI7QUFDckM7QUFDQSxpQ0FBaUM7QUFDakMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtYmFja2dyb3VuZC1wYXJzZXIvaW5kZXguanM/M2U3MiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9naWxtb3Jlb3JsZXNzL2Nzcy1iYWNrZ3JvdW5kLXBhcnNlclxuICogQ29weXJpZ2h0IMKpIDIwMTUgR2lsbW9yZSBEYXZpZHNvbiB1bmRlciB0aGUgTUlUIGxpY2Vuc2U6IGh0dHA6Ly9naWxtb3Jlb3JsZXNzLm1pdC1saWNlbnNlLm9yZy9cbiAqL1xuKGZ1bmN0aW9uIChleHBvcnRzKSB7XG5cbiAgICBmdW5jdGlvbiBCYWNrZ3JvdW5kTGlzdChiYWNrZ3JvdW5kcykge1xuICAgICAgICBpZiAoISh0aGlzIGluc3RhbmNlb2YgQmFja2dyb3VuZExpc3QpKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IEJhY2tncm91bmRMaXN0KCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5iYWNrZ3JvdW5kcyA9IGJhY2tncm91bmRzIHx8IFtdO1xuICAgIH1cblxuICAgIEJhY2tncm91bmRMaXN0LnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYmFja2dyb3VuZHMuam9pbignLCAnKTtcbiAgICB9O1xuXG5cbiAgICBmdW5jdGlvbiBCYWNrZ3JvdW5kKHByb3BzKSB7XG4gICAgICAgIGlmICghKHRoaXMgaW5zdGFuY2VvZiBCYWNrZ3JvdW5kKSkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBCYWNrZ3JvdW5kKHByb3BzKTtcbiAgICAgICAgfVxuICAgICAgICBwcm9wcyA9IHByb3BzIHx8IHt9O1xuICAgICAgICB2YXIgYmcgPSB0aGlzO1xuXG4gICAgICAgIGZ1bmN0aW9uIGRlZnByb3AobmFtZSwgZGVmYXVsdFZhbHVlKSB7XG4gICAgICAgICAgICBiZ1tuYW1lXSA9IChuYW1lIGluIHByb3BzKSA/IHByb3BzW25hbWVdIDogZGVmYXVsdFZhbHVlO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gaHR0cDovL3d3dy53My5vcmcvVFIvY3NzMy1iYWNrZ3JvdW5kLyNiYWNrZ3JvdW5kc1xuICAgICAgICBkZWZwcm9wKCdjb2xvcicsICcnKTtcbiAgICAgICAgZGVmcHJvcCgnaW1hZ2UnLCAnbm9uZScpO1xuICAgICAgICBkZWZwcm9wKCdhdHRhY2htZW50JywgJ3Njcm9sbCcpO1xuICAgICAgICBkZWZwcm9wKCdjbGlwJywgJ2JvcmRlci1ib3gnKTtcbiAgICAgICAgZGVmcHJvcCgnb3JpZ2luJywgJ3BhZGRpbmctYm94Jyk7XG4gICAgICAgIGRlZnByb3AoJ3Bvc2l0aW9uJywgJzAlIDAlJyk7XG4gICAgICAgIGRlZnByb3AoJ3JlcGVhdCcsICdyZXBlYXQnKTtcbiAgICAgICAgZGVmcHJvcCgnc2l6ZScsICdhdXRvJyk7XG4gICAgfVxuXG4gICAgQmFja2dyb3VuZC5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBsaXN0ID0gW1xuICAgICAgICAgICAgdGhpcy5pbWFnZSxcbiAgICAgICAgICAgIHRoaXMucmVwZWF0LFxuICAgICAgICAgICAgdGhpcy5hdHRhY2htZW50LFxuICAgICAgICAgICAgdGhpcy5wb3NpdGlvbiArICcgLyAnICsgdGhpcy5zaXplLFxuICAgICAgICAgICAgdGhpcy5vcmlnaW4sXG4gICAgICAgICAgICB0aGlzLmNsaXBcbiAgICAgICAgXTtcbiAgICAgICAgaWYgKHRoaXMuY29sb3IpIHtcbiAgICAgICAgICAgIGxpc3QudW5zaGlmdCh0aGlzLmNvbG9yKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbGlzdC5qb2luKCcgJyk7XG4gICAgfTtcblxuICAgIGV4cG9ydHMuQmFja2dyb3VuZExpc3QgPSBCYWNrZ3JvdW5kTGlzdDtcbiAgICBleHBvcnRzLkJhY2tncm91bmQgPSBCYWNrZ3JvdW5kO1xuXG5cbiAgICBmdW5jdGlvbiBwYXJzZUltYWdlcyhjc3NUZXh0KSB7XG4gICAgICAgIHZhciBpbWFnZXMgPSBbXTtcbiAgICAgICAgdmFyIHRva2VucyA9IC9bLFxcKFxcKV0vO1xuICAgICAgICB2YXIgcGFyZW5zID0gMDtcbiAgICAgICAgdmFyIGJ1ZmZlciA9ICcnO1xuXG4gICAgICAgIGlmIChjc3NUZXh0ID09IG51bGwpIHtcbiAgICAgICAgICAgIHJldHVybiBpbWFnZXM7XG4gICAgICAgIH1cblxuICAgICAgICB3aGlsZSAoY3NzVGV4dC5sZW5ndGgpIHtcbiAgICAgICAgICAgIHZhciBtYXRjaCA9IHRva2Vucy5leGVjKGNzc1RleHQpO1xuICAgICAgICAgICAgaWYgKCFtYXRjaCkge1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIGNoYXIgPSBtYXRjaFswXTtcbiAgICAgICAgICAgIHZhciBpZ25vcmVDaGFyID0gZmFsc2U7XG4gICAgICAgICAgICBzd2l0Y2ggKGNoYXIpIHtcbiAgICAgICAgICAgICAgICBjYXNlICcsJzpcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFwYXJlbnMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGltYWdlcy5wdXNoKGJ1ZmZlci50cmltKCkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnVmZmVyID0gJyc7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZ25vcmVDaGFyID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlICcoJzpcbiAgICAgICAgICAgICAgICAgICAgcGFyZW5zKys7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgJyknOlxuICAgICAgICAgICAgICAgICAgICBwYXJlbnMtLTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHZhciBpbmRleCA9IG1hdGNoLmluZGV4ICsgMTtcbiAgICAgICAgICAgIGJ1ZmZlciArPSBjc3NUZXh0LnNsaWNlKDAsIGlnbm9yZUNoYXIgPyBpbmRleCAtIDEgOiBpbmRleCk7XG4gICAgICAgICAgICBjc3NUZXh0ID0gY3NzVGV4dC5zbGljZShpbmRleCk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoYnVmZmVyLmxlbmd0aCB8fCBjc3NUZXh0Lmxlbmd0aCkge1xuICAgICAgICAgICAgaW1hZ2VzLnB1c2goKGJ1ZmZlciArIGNzc1RleHQpLnRyaW0oKSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gaW1hZ2VzO1xuICAgIH1cblxuICAgIC8vIEhlbHBlciBmb3IgLm1hcCgpXG4gICAgZnVuY3Rpb24gdHJpbShzdHIpIHtcbiAgICAgICAgcmV0dXJuIHN0ci50cmltKCk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcGFyc2VTaW1wbGVMaXN0KGNzc1RleHQpIHtcbiAgICAgICAgcmV0dXJuIChjc3NUZXh0IHx8ICcnKS5zcGxpdCgnLCcpLm1hcCh0cmltKTtcbiAgICB9XG5cbiAgICBleHBvcnRzLnBhcnNlRWxlbWVudFN0eWxlID0gZnVuY3Rpb24gKHN0eWxlT2JqZWN0KSB7XG4gICAgICAgIHZhciBsaXN0ID0gbmV3IEJhY2tncm91bmRMaXN0KCk7XG4gICAgICAgIGlmIChzdHlsZU9iamVjdCA9PSBudWxsKSB7XG4gICAgICAgICAgICByZXR1cm4gbGlzdDtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBiZ0ltYWdlID0gcGFyc2VJbWFnZXMoc3R5bGVPYmplY3QuYmFja2dyb3VuZEltYWdlKTtcbiAgICAgICAgdmFyIGJnQ29sb3IgPSBzdHlsZU9iamVjdC5iYWNrZ3JvdW5kQ29sb3I7XG4gICAgICAgIHZhciBiZ0F0dGFjaG1lbnQgPSBwYXJzZVNpbXBsZUxpc3Qoc3R5bGVPYmplY3QuYmFja2dyb3VuZEF0dGFjaG1lbnQpO1xuICAgICAgICB2YXIgYmdDbGlwICAgICAgID0gcGFyc2VTaW1wbGVMaXN0KHN0eWxlT2JqZWN0LmJhY2tncm91bmRDbGlwKTtcbiAgICAgICAgdmFyIGJnT3JpZ2luICAgICA9IHBhcnNlU2ltcGxlTGlzdChzdHlsZU9iamVjdC5iYWNrZ3JvdW5kT3JpZ2luKTtcbiAgICAgICAgdmFyIGJnUG9zaXRpb24gICA9IHBhcnNlU2ltcGxlTGlzdChzdHlsZU9iamVjdC5iYWNrZ3JvdW5kUG9zaXRpb24pO1xuICAgICAgICB2YXIgYmdSZXBlYXQgICAgID0gcGFyc2VTaW1wbGVMaXN0KHN0eWxlT2JqZWN0LmJhY2tncm91bmRSZXBlYXQpO1xuICAgICAgICB2YXIgYmdTaXplICAgICAgID0gcGFyc2VTaW1wbGVMaXN0KHN0eWxlT2JqZWN0LmJhY2tncm91bmRTaXplKTtcbiAgICAgICAgdmFyIGJhY2tncm91bmQ7XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDAsIGlpID0gYmdJbWFnZS5sZW5ndGg7IGkgPCBpaTsgaSsrKSB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kID0gbmV3IEJhY2tncm91bmQoe1xuICAgICAgICAgICAgICAgIGltYWdlOiAgICAgIGJnSW1hZ2VbaV0sXG4gICAgICAgICAgICAgICAgYXR0YWNobWVudDogYmdBdHRhY2htZW50W2kgJSBiZ0F0dGFjaG1lbnQubGVuZ3RoXSxcbiAgICAgICAgICAgICAgICBjbGlwOiAgICAgICBiZ0NsaXBbaSAlIGJnQ2xpcC5sZW5ndGhdLFxuICAgICAgICAgICAgICAgIG9yaWdpbjogICAgIGJnT3JpZ2luW2kgJSBiZ09yaWdpbi5sZW5ndGhdLFxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiAgIGJnUG9zaXRpb25baSAlIGJnUG9zaXRpb24ubGVuZ3RoXSxcbiAgICAgICAgICAgICAgICByZXBlYXQ6ICAgICBiZ1JlcGVhdFtpICUgYmdSZXBlYXQubGVuZ3RoXSxcbiAgICAgICAgICAgICAgICBzaXplOiAgICAgICBiZ1NpemVbaSAlIGJnU2l6ZS5sZW5ndGhdXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGlmIChpID09PSBpaSAtIDEpIHtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLmNvbG9yID0gYmdDb2xvcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxpc3QuYmFja2dyb3VuZHMucHVzaChiYWNrZ3JvdW5kKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBsaXN0O1xuICAgIH07XG5cbiAgICAvLyBleHBvcnRzLnBhcnNlQ3NzU3RyaW5nID0gZnVuY3Rpb24gKGNzc1N0cmluZykge1xuICAgIC8vICAgICByZXR1cm4gbmV3IEJhY2tncm91bmQoKTtcbiAgICAvLyB9O1xuXG4gICAgLy8gZXhwb3J0cy5wYXJzZUJhY2tncm91bmRWYWx1ZSA9IGZ1bmN0aW9uIChjc3NTdHJpbmcpIHtcbiAgICAvLyAgICAgcmV0dXJuIG5ldyBCYWNrZ3JvdW5kKCk7XG4gICAgLy8gfTtcblxufSkoKGZ1bmN0aW9uIChyb290KSB7XG4gICAgLy8gQ29tbW9uSlNcbiAgICBpZiAodHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcgJiYgbW9kdWxlLmV4cG9ydHMgIT09IHVuZGVmaW5lZCkgcmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuICAgIC8vIEdsb2JhbCBgY3NzQmdQYXJzZXJgXG4gICAgcmV0dXJuIChyb290LmNzc0JnUGFyc2VyID0ge30pO1xufSkodGhpcykpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/css-background-parser/index.js\n");

/***/ })

};
;